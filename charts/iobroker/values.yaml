# Default values for iobroker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of replicas for the deployment
replicaCount: 1

# Image settings
image:
  # Repository for the Home Assistant image
  repository: buanet/iobroker
  # Image pull policy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# List of imagePullSecrets for private image repositories
imagePullSecrets: []
# Override the default name of the Helm chart
nameOverride: ""
# Override the default full name of the Helm chart
fullnameOverride: ""

# Service account settings
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Annotations to add to the pod
podAnnotations: {}
podLabels: {}

# Pod security context settings
podSecurityContext:
  {}
  # runAsUser: 568
  # runAsGroup: 568
  # fsGroup: 568
  # fsGroupChangePolicy: "OnRootMismatch"

# Environment variables
env: []
# - name: TZ
#   value: Europe/Prague
# - name: SOME_VAR_FROM_CONFIG_MAP
#   valueFrom:
#     configMapRef:
#       name: configmap-name
#       key: config-key
# - name: SOME_SECRET
#   valueFrom:
#     secretKeyRef:
#       name: secret-name
#       key: secret-key

# Use environment variables from ConfigMaps or Secrets
envFrom: []
# - configMapRef:
#     name: config-map-name
# - secretRef:
#     name: secret-name

hostPort:
  # Enable 'hostPort' or not
  enabled: false
  port: 8081

# Specifies if the containers should be started in hostNetwork mode.
#
# Required for use auto-discovery feature of Home Assistant
hostNetwork: false

# Set the dnsPolicy (you'll want ClusterFirstWithHostNet if running on hostNetwork to reac
# other k8s services via DNS
# dnsPolicy: ClusterFirst

# Container security context settings
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Pod's DNS Configuration
# https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
# This value is useful if you need to reduce the DNS load: set "ndots" to 0 and only use FQDNs.
dnsConfig: {}
  # nameservers:
  #   - 1.2.3.4
  # searches:
  #   - ns1.svc.cluster-domain.example
  #   - my.dns.search.suffix
  # options:
  #   - name: ndots
  #     value: "2"

# Service settings
service:
  # Service type (ClusterIP, NodePort, LoadBalancer, or ExternalName)
  type: ClusterIP
  # Service port
  port: 8081
  # Annotations to add to the service
  annotations: {}

# Ingress settings
ingress:
  # Enable ingress for home assistant
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Resource settings for the container
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Node selector settings for scheduling the pod on specific nodes
nodeSelector: {}

# Tolerations settings for scheduling the pod based on node taints
tolerations: []

# Affinity settings for controlling pod scheduling
affinity: {}

# Persistence values for the Home Assistant instance
persistence:
  # Enable or disable persistence
  enabled: false
  # Access mode for the persistent volume claim
  accessMode: ReadWriteOnce
  # Size of the persistent volume claim
  size: 15Gi
  # Storage class for the persistent volume claim
  storageClass: ""
  # Name of the existing volume claim for the stateful set, this option can be used to use existing volumes
  existingVolume: ""
  ## Persistent Volume selectors
  ## https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector
  matchLabels: {}
  matchExpressions: {}

# if you need any additional volumes, you can define them here
additionalVolumes: []
  # - hostPath:
  #     path: >-
  #       /dev/serial/by-id/usb-Silicon_Labs_Sonoff_Zigbee_3.0_USB_Dongle_Plus_0001-if00-port0
  #     type: CharDevice
  #   name: usb
# if you need any additional volume mounts, you can define them here
additionalMounts: []
  # - mountPath: /dev/ttyACM0
  #   name: usb

# if you need to expose additional ports
additionalPorts: []
#  - name: sia
#    containerPort: 8124
#    protocol: TCP

# if you need to expose additional services
additionalServices: []
#  - name: sia
#    port: 8124
#    targetPort: sia
#    type: NodePort
#    protocol: TCP
#    nodePort: 30124

callbackLBservice: {}

livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: admin
    scheme: HTTP
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 2
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: admin
    scheme: HTTP
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
startupProbe: {}
  # initialDelaySeconds: 1
  # periodSeconds: 5
  # timeoutSeconds: 1
  # successThreshold: 1
  # failureThreshold: 1
  # httpGet:
  #   scheme: HTTP
  #   path: /
  #   port: http


